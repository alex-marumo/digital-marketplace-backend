{
  "openapi": "3.0.0",
  "info": {
    "title": "Art Marketplace API",
    "version": "1.0.0",
    "description": "API for managing users, artists, artworks, categories, orders, payments, reviews, and messages in an art marketplace. Authentication is handled via Keycloak JWT tokens."
  },
  "servers": [
    {
      "url": "http://localhost:3000",
      "description": "Local development server"
    }
  ],
  "components": {
    "securitySchemes": {
      "BearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT",
        "description": "JWT token from Keycloak. Roles: `buyer`, `artist`, `admin`."
      }
    },
    "schemas": {
      "User": {
        "type": "object",
        "properties": {
          "user_id": { "type": "integer", "description": "Auto-incremented user ID" },
          "keycloak_id": { "type": "string", "format": "uuid", "description": "Keycloak UUID" },
          "name": { "type": "string", "description": "User's full name" },
          "email": { "type": "string", "description": "User's email" },
          "role": { "type": "string", "enum": ["buyer", "artist", "admin"], "description": "User's role" }
        },
        "required": ["user_id", "keycloak_id", "name", "email", "role"]
      },
      "Artist": {
        "type": "object",
        "properties": {
          "user_id": { "type": "string", "format": "uuid", "description": "Keycloak UUID of the artist" },
          "bio": { "type": "string", "description": "Artist's biography" },
          "portfolio": { "type": "string", "description": "Portfolio link or description" }
        },
        "required": ["user_id", "bio", "portfolio"]
      },
      "Artwork": {
        "type": "object",
        "properties": {
          "artwork_id": { "type": "integer", "description": "Unique artwork ID" },
          "artist_id": { "type": "string", "format": "uuid", "description": "Keycloak UUID of the artist" },
          "title": { "type": "string", "description": "Artwork title" },
          "description": { "type": "string", "description": "Artwork description" },
          "price": { "type": "number", "format": "float", "description": "Price in currency" },
          "category_id": { "type": "integer", "description": "Category ID" },
          "images": { "type": "array", "items": { "type": "string" }, "description": "Image file paths" }
        },
        "required": ["artwork_id", "artist_id", "title", "price", "category_id"]
      },
      "Category": {
        "type": "object",
        "properties": {
          "category_id": { "type": "integer", "description": "Unique category ID" },
          "name": { "type": "string", "description": "Category name" },
          "description": { "type": "string", "description": "Category description" }
        },
        "required": ["category_id", "name"]
      },
      "Order": {
        "type": "object",
        "properties": {
          "order_id": { "type": "integer", "description": "Unique order ID" },
          "buyer_id": { "type": "string", "format": "uuid", "description": "Keycloak UUID of the buyer" },
          "artwork_id": { "type": "integer", "description": "Artwork ID" },
          "total_amount": { "type": "number", "format": "float", "description": "Total cost" },
          "status": { "type": "string", "enum": ["pending", "completed", "canceled"], "description": "Order status" }
        },
        "required": ["order_id", "buyer_id", "artwork_id", "total_amount", "status"]
      },
      "OrderItem": {
        "type": "object",
        "properties": {
          "order_item_id": { "type": "integer", "description": "Unique order item ID" },
          "order_id": { "type": "integer", "description": "Order ID" },
          "artwork_id": { "type": "integer", "description": "Artwork ID" },
          "quantity": { "type": "integer", "description": "Number of units" },
          "price": { "type": "number", "format": "float", "description": "Price per unit" }
        },
        "required": ["order_item_id", "order_id", "artwork_id", "quantity", "price"]
      },
      "Payment": {
        "type": "object",
        "properties": {
          "payment_id": { "type": "integer", "description": "Unique payment ID" },
          "order_id": { "type": "integer", "description": "Order ID" },
          "amount": { "type": "number", "format": "float", "description": "Payment amount" },
          "status": { "type": "string", "enum": ["pending", "completed", "failed"], "description": "Payment status" }
        },
        "required": ["payment_id", "order_id", "amount", "status"]
      },
      "Review": {
        "type": "object",
        "properties": {
          "review_id": { "type": "integer", "description": "Unique review ID" },
          "artwork_id": { "type": "integer", "description": "Artwork ID" },
          "user_id": { "type": "string", "format": "uuid", "description": "Keycloak UUID of reviewer" },
          "rating": { "type": "integer", "minimum": 1, "maximum": 5, "description": "Rating (1-5)" },
          "comment": { "type": "string", "description": "Review comment" }
        },
        "required": ["review_id", "artwork_id", "user_id", "rating"]
      },
      "Message": {
        "type": "object",
        "properties": {
          "message_id": { "type": "integer", "description": "Unique message ID" },
          "sender_id": { "type": "string", "format": "uuid", "description": "Keycloak UUID of sender" },
          "receiver_id": { "type": "string", "format": "uuid", "description": "Keycloak UUID of receiver" },
          "content": { "type": "string", "description": "Message text" }
        },
        "required": ["message_id", "sender_id", "receiver_id", "content"]
      },
      "Error": {
        "type": "object",
        "properties": {
          "error": { "type": "string", "description": "Error type" },
          "details": { "type": "string", "description": "Error details" }
        },
        "required": ["error"]
      }
    }
  },
  "paths": {
    "/api/users/me": {
      "get": {
        "summary": "Fetch current user's profile",
        "description": "Returns the authenticated user's details. Creates a new user if none exists.",
        "security": [{ "BearerAuth": [] }],
        "responses": {
          "200": {
            "description": "User profile",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/User" } } }
          },
          "401": { "description": "Unauthorized (no token)", "content": { "application/json": { "schema": { "$ref": "#/components/schemas/Error" } } } },
          "500": { "description": "Database error", "content": { "application/json": { "schema": { "$ref": "#/components/schemas/Error" } } } }
        }
      },
      "put": {
        "summary": "Update current user's profile",
        "description": "Updates name and/or email for the authenticated user.",
        "security": [{ "BearerAuth": [] }],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": { "type": "string" },
                  "email": { "type": "string" }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Profile updated",
            "content": { "application/json": { "schema": { "type": "object", "properties": { "message": { "type": "string" }, "user": { "$ref": "#/components/schemas/User" } } } } }
          },
          "404": { "description": "User not found", "content": { "application/json": { "schema": { "$ref": "#/components/schemas/Error" } } } },
          "401": { "description": "Unauthorized", "content": { "application/json": { "schema": { "$ref": "#/components/schemas/Error" } } } },
          "500": { "description": "Database error", "content": { "application/json": { "schema": { "$ref": "#/components/schemas/Error" } } } }
        }
      }
    },
    "/api/artists": {
      "post": {
        "summary": "Create artist profile",
        "description": "Creates an artist profile for the authenticated user with 'artist' role.",
        "security": [{ "BearerAuth": ["realm:artist"] }],
        "requestBody": {
          "required": true,
          "content": { "application/json": { "schema": { "$ref": "#/components/schemas/Artist" } } }
        },
        "responses": {
          "201": { "description": "Artist profile created", "content": { "application/json": { "schema": { "$ref": "#/components/schemas/Artist" } } } },
          "403": { "description": "Requires 'artist' role", "content": { "application/json": { "schema": { "$ref": "#/components/schemas/Error" } } } },
          "500": { "description": "Database error", "content": { "application/json": { "schema": { "$ref": "#/components/schemas/Error" } } } }
        }
      },
      "get": {
        "summary": "List all artists",
        "description": "Returns all artist profiles (public access).",
        "responses": {
          "200": { "description": "List of artists", "content": { "application/json": { "schema": { "type": "array", "items": { "$ref": "#/components/schemas/Artist" } } } } },
          "500": { "description": "Database error", "content": { "application/json": { "schema": { "$ref": "#/components/schemas/Error" } } } }
        }
      }
    },
    "/api/artists/{id}": {
      "get": {
        "summary": "Get artist by ID",
        "description": "Fetches a specific artist's profile by their Keycloak UUID.",
        "parameters": [
          { "name": "id", "in": "path", "required": true, "schema": { "type": "string", "format": "uuid" }, "description": "Artist's Keycloak UUID" }
        ],
        "responses": {
          "200": { "description": "Artist details", "content": { "application/json": { "schema": { "$ref": "#/components/schemas/Artist" } } } },
          "404": { "description": "Artist not found", "content": { "application/json": { "schema": { "$ref": "#/components/schemas/Error" } } } },
          "500": { "description": "Database error", "content": { "application/json": { "schema": { "$ref": "#/components/schemas/Error" } } } }
        }
      },
      "put": {
        "summary": "Update artist profile",
        "description": "Updates the authenticated artist's profile. Must match the user's Keycloak ID.",
        "security": [{ "BearerAuth": ["realm:artist"] }],
        "parameters": [
          { "name": "id", "in": "path", "required": true, "schema": { "type": "string", "format": "uuid" }, "description": "Artist's Keycloak UUID" }
        ],
        "requestBody": {
          "required": true,
          "content": { "application/json": { "schema": { "$ref": "#/components/schemas/Artist" } } }
        },
        "responses": {
          "200": { "description": "Updated artist profile", "content": { "application/json": { "schema": { "$ref": "#/components/schemas/Artist" } } } },
          "403": { "description": "Unauthorized (not the artist)", "content": { "application/json": { "schema": { "$ref": "#/components/schemas/Error" } } } },
          "404": { "description": "Artist not found", "content": { "application/json": { "schema": { "$ref": "#/components/schemas/Error" } } } },
          "500": { "description": "Database error", "content": { "application/json": { "schema": { "$ref": "#/components/schemas/Error" } } } }
        }
      }
    },
    "/api/artworks": {
      "post": {
        "summary": "Add new artwork",
        "description": "Creates an artwork with an image. Requires 'artist' role.",
        "security": [{ "BearerAuth": ["realm:artist"] }],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "title": { "type": "string" },
                  "description": { "type": "string" },
                  "price": { "type": "number", "format": "float" },
                  "category_id": { "type": "integer" },
                  "image": { "type": "string", "format": "binary", "description": "Artwork image file" }
                },
                "required": ["title", "price", "category_id", "image"]
              }
            }
          }
        },
        "responses": {
          "201": { "description": "Artwork created", "content": { "application/json": { "schema": { "$ref": "#/components/schemas/Artwork" } } } },
          "400": { "description": "Invalid input", "content": { "application/json": { "schema": { "$ref": "#/components/schemas/Error" } } } },
          "403": { "description": "Requires 'artist' role", "content": { "application/json": { "schema": { "$ref": "#/components/schemas/Error" } } } },
          "500": { "description": "Database error", "content": { "application/json": { "schema": { "$ref": "#/components/schemas/Error" } } } }
        }
      },
      "get": {
        "summary": "List all artworks",
        "description": "Returns all artworks with their images (public access).",
        "responses": {
          "200": { "description": "List of artworks", "content": { "application/json": { "schema": { "type": "array", "items": { "$ref": "#/components/schemas/Artwork" } } } } },
          "500": { "description": "Database error", "content": { "application/json": { "schema": { "$ref": "#/components/schemas/Error" } } } }
        }
      }
    },
    "/api/artworks/{id}": {
      "get": {
        "summary": "Get artwork by ID",
        "description": "Fetches a specific artwork with its images.",
        "parameters": [
          { "name": "id", "in": "path", "required": true, "schema": { "type": "integer" }, "description": "Artwork ID" }
        ],
        "responses": {
          "200": { "description": "Artwork details", "content": { "application/json": { "schema": { "$ref": "#/components/schemas/Artwork" } } } },
          "404": { "description": "Artwork not found", "content": { "application/json": { "schema": { "$ref": "#/components/schemas/Error" } } } },
          "500": { "description": "Database error", "content": { "application/json": { "schema": { "$ref": "#/components/schemas/Error" } } } }
        }
      },
      "put": {
        "summary": "Update artwork",
        "description": "Updates an artwork. Must be the artist who created it.",
        "security": [{ "BearerAuth": ["realm:artist"] }],
        "parameters": [
          { "name": "id", "in": "path", "required": true, "schema": { "type": "integer" }, "description": "Artwork ID" }
        ],
        "requestBody": {
          "required": true,
          "content": { "application/json": { "schema": { "$ref": "#/components/schemas/Artwork" } } }
        },
        "responses": {
          "200": { "description": "Updated artwork", "content": { "application/json": { "schema": { "$ref": "#/components/schemas/Artwork" } } } },
          "403": { "description": "Unauthorized (not the artist)", "content": { "application/json": { "schema": { "$ref": "#/components/schemas/Error" } } } },
          "404": { "description": "Artwork not found", "content": { "application/json": { "schema": { "$ref": "#/components/schemas/Error" } } } },
          "500": { "description": "Database error", "content": { "application/json": { "schema": { "$ref": "#/components/schemas/Error" } } } }
        }
      },
      "delete": {
        "summary": "Delete artwork",
        "description": "Deletes an artwork. Requires artist ownership or 'admin' role.",
        "security": [{ "BearerAuth": [] }],
        "parameters": [
          { "name": "id", "in": "path", "required": true, "schema": { "type": "integer" }, "description": "Artwork ID" }
        ],
        "responses": {
          "200": { "description": "Artwork deleted", "content": { "application/json": { "schema": { "type": "object", "properties": { "message": { "type": "string" } } } } } },
          "403": { "description": "Unauthorized (not artist or admin)", "content": { "application/json": { "schema": { "$ref": "#/components/schemas/Error" } } } },
          "404": { "description": "Artwork not found", "content": { "application/json": { "schema": { "$ref": "#/components/schemas/Error" } } } },
          "500": { "description": "Database error", "content": { "application/json": { "schema": { "$ref": "#/components/schemas/Error" } } } }
        }
      }
    },
    "/api/artworks/{id}/images": {
      "post": {
        "summary": "Upload artwork images",
        "description": "Adds up to 5 images to an artwork. Must be the artist.",
        "security": [{ "BearerAuth": ["realm:artist"] }],
        "parameters": [
          { "name": "id", "in": "path", "required": true, "schema": { "type": "integer" }, "description": "Artwork ID" }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": { "images": { "type": "array", "items": { "type": "string", "format": "binary" }, "maxItems": 5 } },
                "required": ["images"]
              }
            }
          }
        },
        "responses": {
          "200": { "description": "Images uploaded", "content": { "application/json": { "schema": { "type": "object", "properties": { "message": { "type": "string" }, "images": { "type": "array", "items": { "type": "string" } } } } } } },
          "400": { "description": "No images provided", "content": { "application/json": { "schema": { "$ref": "#/components/schemas/Error" } } } },
          "403": { "description": "Unauthorized (not the artist)", "content": { "application/json": { "schema": { "$ref": "#/components/schemas/Error" } } } },
          "404": { "description": "Artwork not found", "content": { "application/json": { "schema": { "$ref": "#/components/schemas/Error" } } } },
          "500": { "description": "Database error", "content": { "application/json": { "schema": { "$ref": "#/components/schemas/Error" } } } }
        }
      }
    },
    "/api/categories": {
      "post": {
        "summary": "Create new category",
        "description": "Adds a category. Requires 'admin' role.",
        "security": [{ "BearerAuth": ["realm:admin"] }],
        "requestBody": {
          "required": true,
          "content": { "application/json": { "schema": { "$ref": "#/components/schemas/Category" } } }
        },
        "responses": {
          "201": { "description": "Category created", "content": { "application/json": { "schema": { "$ref": "#/components/schemas/Category" } } } },
          "403": { "description": "Requires 'admin' role", "content": { "application/json": { "schema": { "$ref": "#/components/schemas/Error" } } } },
          "500": { "description": "Database error", "content": { "application/json": { "schema": { "$ref": "#/components/schemas/Error" } } } }
        }
      },
      "get": {
        "summary": "List all categories",
        "description": "Returns all categories (public access).",
        "responses": {
          "200": { "description": "List of categories", "content": { "application/json": { "schema": { "type": "array", "items": { "$ref": "#/components/schemas/Category" } } } } },
          "500": { "description": "Database error", "content": { "application/json": { "schema": { "$ref": "#/components/schemas/Error" } } } }
        }
      }
    },
    "/api/categories/{id}": {
      "put": {
        "summary": "Update category",
        "description": "Updates a category. Requires 'admin' role.",
        "security": [{ "BearerAuth": ["realm:admin"] }],
        "parameters": [
          { "name": "id", "in": "path", "required": true, "schema": { "type": "integer" }, "description": "Category ID" }
        ],
        "requestBody": {
          "required": true,
          "content": { "application/json": { "schema": { "$ref": "#/components/schemas/Category" } } }
        },
        "responses": {
          "200": { "description": "Updated category", "content": { "application/json": { "schema": { "$ref": "#/components/schemas/Category" } } } },
          "403": { "description": "Requires 'admin' role", "content": { "application/json": { "schema": { "$ref": "#/components/schemas/Error" } } } },
          "404": { "description": "Category not found", "content": { "application/json": { "schema": { "$ref": "#/components/schemas/Error" } } } },
          "500": { "description": "Database error", "content": { "application/json": { "schema": { "$ref": "#/components/schemas/Error" } } } }
        }
      }
    },
    "/api/search": {
      "post": {
        "summary": "Search artworks",
        "description": "Searches artworks by title, artist name, or category (public access).",
        "requestBody": {
          "required": true,
          "content": { "application/json": { "schema": { "type": "object", "properties": { "query": { "type": "string" } }, "required": ["query"] } } }
        },
        "responses": {
          "200": { "description": "Matching artworks", "content": { "application/json": { "schema": { "type": "array", "items": { "$ref": "#/components/schemas/Artwork" } } } } },
          "500": { "description": "Database error", "content": { "application/json": { "schema": { "$ref": "#/components/schemas/Error" } } } }
        }
      }
    },
    "/api/orders": {
      "post": {
        "summary": "Place an order",
        "description": "Creates an order for an artwork. Requires 'buyer' role.",
        "security": [{ "BearerAuth": ["realm:buyer"] }],
        "requestBody": {
          "required": true,
          "content": { "application/json": { "schema": { "$ref": "#/components/schemas/Order" } } }
        },
        "responses": {
          "201": { "description": "Order created", "content": { "application/json": { "schema": { "$ref": "#/components/schemas/Order" } } } },
          "403": { "description": "Requires 'buyer' role", "content": { "application/json": { "schema": { "$ref": "#/components/schemas/Error" } } } },
          "500": { "description": "Database error", "content": { "application/json": { "schema": { "$ref": "#/components/schemas/Error" } } } }
        }
      },
      "get": {
        "summary": "List user's orders",
        "description": "Returns all orders for the authenticated user.",
        "security": [{ "BearerAuth": [] }],
        "responses": {
          "200": { "description": "User's orders", "content": { "application/json": { "schema": { "type": "array", "items": { "$ref": "#/components/schemas/Order" } } } } },
          "401": { "description": "Unauthorized", "content": { "application/json": { "schema": { "$ref": "#/components/schemas/Error" } } } },
          "500": { "description": "Database error", "content": { "application/json": { "schema": { "$ref": "#/components/schemas/Error" } } } }
        }
      }
    },
    "/api/orders/{id}": {
      "get": {
        "summary": "Get order by ID",
        "description": "Fetches a specific order for the authenticated user.",
        "security": [{ "BearerAuth": [] }],
        "parameters": [
          { "name": "id", "in": "path", "required": true, "schema": { "type": "integer" }, "description": "Order ID" }
        ],
        "responses": {
          "200": { "description": "Order details", "content": { "application/json": { "schema": { "$ref": "#/components/schemas/Order" } } } },
          "404": { "description": "Order not found", "content": { "application/json": { "schema": { "$ref": "#/components/schemas/Error" } } } },
          "500": { "description": "Database error", "content": { "application/json": { "schema": { "$ref": "#/components/schemas/Error" } } } }
        }
      }
    },
    "/api/orders/{id}/status": {
      "put": {
        "summary": "Update order status",
        "description": "Updates an order's status. Requires 'admin' role.",
        "security": [{ "BearerAuth": ["realm:admin"] }],
        "parameters": [
          { "name": "id", "in": "path", "required": true, "schema": { "type": "integer" }, "description": "Order ID" }
        ],
        "requestBody": {
          "required": true,
          "content": { "application/json": { "schema": { "type": "object", "properties": { "status": { "type": "string", "enum": ["pending", "completed", "canceled"] } }, "required": ["status"] } } }
        },
        "responses": {
          "200": { "description": "Updated order", "content": { "application/json": { "schema": { "$ref": "#/components/schemas/Order" } } } },
          "403": { "description": "Requires 'admin' role", "content": { "application/json": { "schema": { "$ref": "#/components/schemas/Error" } } } },
          "404": { "description": "Order not found", "content": { "application/json": { "schema": { "$ref": "#/components/schemas/Error" } } } },
          "500": { "description": "Database error", "content": { "application/json": { "schema": { "$ref": "#/components/schemas/Error" } } } }
        }
      }
    },
    "/api/order-items": {
      "post": {
        "summary": "Add item to order",
        "description": "Adds an item to an order. Requires authentication.",
        "security": [{ "BearerAuth": [] }],
        "requestBody": {
          "required": true,
          "content": { "application/json": { "schema": { "$ref": "#/components/schemas/OrderItem" } } }
        },
        "responses": {
          "201": { "description": "Order item added", "content": { "application/json": { "schema": { "$ref": "#/components/schemas/OrderItem" } } } },
          "500": { "description": "Database error", "content": { "application/json": { "schema": { "$ref": "#/components/schemas/Error" } } } }
        }
      }
    },
    "/api/order-items/{order_id}": {
      "get": {
        "summary": "List order items",
        "description": "Returns all items for a specific order. Requires authentication.",
        "security": [{ "BearerAuth": [] }],
        "parameters": [
          { "name": "order_id", "in": "path", "required": true, "schema": { "type": "integer" }, "description": "Order ID" }
        ],
        "responses": {
          "200": { "description": "Order items", "content": { "application/json": { "schema": { "type": "array", "items": { "$ref": "#/components/schemas/OrderItem" } } } } },
          "500": { "description": "Database error", "content": { "application/json": { "schema": { "$ref": "#/components/schemas/Error" } } } }
        }
      }
    },
    "/api/payments": {
      "post": {
        "summary": "Create payment",
        "description": "Records a payment for an order. Requires authentication.",
        "security": [{ "BearerAuth": [] }],
        "requestBody": {
          "required": true,
          "content": { "application/json": { "schema": { "$ref": "#/components/schemas/Payment" } } }
        },
        "responses": {
          "201": { "description": "Payment created", "content": { "application/json": { "schema": { "$ref": "#/components/schemas/Payment" } } } },
          "500": { "description": "Database error", "content": { "application/json": { "schema": { "$ref": "#/components/schemas/Error" } } } }
        }
      }
    },
    "/api/payments/{order_id}": {
      "get": {
        "summary": "List payments for order",
        "description": "Returns all payments for a specific order. Requires authentication.",
        "security": [{ "BearerAuth": [] }],
        "parameters": [
          { "name": "order_id", "in": "path", "required": true, "schema": { "type": "integer" }, "description": "Order ID" }
        ],
        "responses": {
          "200": { "description": "Payments list", "content": { "application/json": { "schema": { "type": "array", "items": { "$ref": "#/components/schemas/Payment" } } } } },
          "500": { "description": "Database error", "content": { "application/json": { "schema": { "$ref": "#/components/schemas/Error" } } } }
        }
      }
    },
    "/api/payments/{id}/status": {
      "put": {
        "summary": "Update payment status",
        "description": "Updates a payment's status. Requires 'admin' role.",
        "security": [{ "BearerAuth": ["realm:admin"] }],
        "parameters": [
          { "name": "id", "in": "path", "required": true, "schema": { "type": "integer" }, "description": "Payment ID" }
        ],
        "requestBody": {
          "required": true,
          "content": { "application/json": { "schema": { "type": "object", "properties": { "status": { "type": "string", "enum": ["pending", "completed", "failed"] } }, "required": ["status"] } } }
        },
        "responses": {
          "200": { "description": "Updated payment", "content": { "application/json": { "schema": { "$ref": "#/components/schemas/Payment" } } } },
          "403": { "description": "Requires 'admin' role", "content": { "application/json": { "schema": { "$ref": "#/components/schemas/Error" } } } },
          "404": { "description": "Payment not found", "content": { "application/json": { "schema": { "$ref": "#/components/schemas/Error" } } } },
          "500": { "description": "Database error", "content": { "application/json": { "schema": { "$ref": "#/components/schemas/Error" } } } }
        }
      }
    },
    "/api/reviews": {
      "post": {
        "summary": "Leave a review",
        "description": "Adds a review for an artwork. Requires 'buyer' role.",
        "security": [{ "BearerAuth": ["realm:buyer"] }],
        "requestBody": {
          "required": true,
          "content": { "application/json": { "schema": { "$ref": "#/components/schemas/Review" } } }
        },
        "responses": {
          "201": { "description": "Review created", "content": { "application/json": { "schema": { "$ref": "#/components/schemas/Review" } } } },
          "403": { "description": "Requires 'buyer' role", "content": { "application/json": { "schema": { "$ref": "#/components/schemas/Error" } } } },
          "500": { "description": "Database error", "content": { "application/json": { "schema": { "$ref": "#/components/schemas/Error" } } } }
        }
      }
    },
    "/api/reviews/{artwork_id}": {
      "get": {
        "summary": "List reviews for artwork",
        "description": "Returns all reviews for a specific artwork (public access).",
        "parameters": [
          { "name": "artwork_id", "in": "path", "required": true, "schema": { "type": "integer" }, "description": "Artwork ID" }
        ],
        "responses": {
          "200": { "description": "Reviews list", "content": { "application/json": { "schema": { "type": "array", "items": { "$ref": "#/components/schemas/Review" } } } } },
          "500": { "description": "Database error", "content": { "application/json": { "schema": { "$ref": "#/components/schemas/Error" } } } }
        }
      }
    },
    "/api/messages": {
      "post": {
        "summary": "Send a message",
        "description": "Sends a message to another user. Requires authentication.",
        "security": [{ "BearerAuth": [] }],
        "requestBody": {
          "required": true,
          "content": { "application/json": { "schema": { "$ref": "#/components/schemas/Message" } } }
        },
        "responses": {
          "201": { "description": "Message sent", "content": { "application/json": { "schema": { "$ref": "#/components/schemas/Message" } } } },
          "500": { "description": "Database error", "content": { "application/json": { "schema": { "$ref": "#/components/schemas/Error" } } } }
        }
      }
    }
  }
}