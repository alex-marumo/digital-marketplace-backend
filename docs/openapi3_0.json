{
  "openapi": "3.0.0",
  "info": {
    "title": "Digital Marketplace API",
    "version": "1.0.0",
    "description": "API for the Digital Marketplace, handling user authentication (via Keycloak), artist verification, artwork management, orders, payments, reviews, messaging, and search. Secured with JWTs, rate limiting, and reCAPTCHA."
  },
  "servers": [
    { "url": "http://localhost:3000", "description": "Local development server" },
    { "url": "https://api.your-marketplace.com", "description": "Production server" }
  ],
  "components": {
    "securitySchemes": {
      "BearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT",
        "description": "JWT issued by Keycloak (realm: digital-marketplace)"
      }
    },
    "schemas": {
      "User": {
        "type": "object",
        "properties": {
          "user_id": { "type": "integer" },
          "keycloak_id": { "type": "string", "format": "uuid" },
          "name": { "type": "string" },
          "email": { "type": "string", "format": "email" },
          "role": { "type": "string", "enum": ["buyer", "artist", "admin"] },
          "is_verified": { "type": "boolean" },
          "trust_level": { "type": "integer", "enum": [0, 1, 2, 3], "description": "0=NEW, 1=VERIFIED, 2=TRUSTED, 3=BANNED" },
          "status": { "type": "string", "enum": ["pending_email_verification", "pending_role_selection", "pending_verification", "verified"] }
        },
        "required": ["user_id", "keycloak_id", "name", "email", "role", "is_verified", "trust_level", "status"]
      },
      "Artist": {
        "type": "object",
        "properties": {
          "user_id": { "type": "string", "format": "uuid" },
          "bio": { "type": "string" },
          "portfolio": { "type": "string" }
        },
        "required": ["user_id"]
      },
      "ArtistRequest": {
        "type": "object",
        "properties": {
          "request_id": { "type": "integer" },
          "user_id": { "type": "string", "format": "uuid" },
          "id_hash": { "type": "string" },
          "proof_of_work_path": { "type": "string" },
          "selfie_path": { "type": "string", "nullable": true },
          "status": { "type": "string", "enum": ["pending", "approved", "rejected"] },
          "rejection_reason": { "type": "string", "nullable": true },
          "requested_at": { "type": "string", "format": "date-time" },
          "reviewed_by": { "type": "string", "format": "uuid", "nullable": true },
          "reviewed_at": { "type": "string", "format": "date-time", "nullable": true }
        },
        "required": ["request_id", "user_id", "id_hash", "proof_of_work_path", "status"]
      },
      "Artwork": {
        "type": "object",
        "properties": {
          "artwork_id": { "type": "integer" },
          "artist_id": { "type": "string", "format": "uuid" },
          "title": { "type": "string" },
          "description": { "type": "string" },
          "price": { "type": "number", "format": "float" },
          "category_id": { "type": "integer" },
          "images": { "type": "array", "items": { "type": "string" } }
        },
        "required": ["artwork_id", "artist_id", "title", "price", "category_id"]
      },
      "Category": {
        "type": "object",
        "properties": {
          "category_id": { "type": "integer" },
          "name": { "type": "string" },
          "description": { "type": "string" }
        },
        "required": ["category_id", "name"]
      },
      "Order": {
        "type": "object",
        "properties": {
          "order_id": { "type": "integer" },
          "buyer_id": { "type": "string", "format": "uuid" },
          "artwork_id": { "type": "integer" },
          "total_amount": { "type": "number", "format": "float" },
          "status": { "type": "string", "enum": ["pending", "completed", "canceled"] }
        },
        "required": ["order_id", "buyer_id", "artwork_id", "total_amount", "status"]
      },
      "OrderItem": {
        "type": "object",
        "properties": {
          "order_item_id": { "type": "integer" },
          "order_id": { "type": "integer" },
          "artwork_id": { "type": "integer" },
          "quantity": { "type": "integer" },
          "price": { "type": "number", "format": "float" }
        },
        "required": ["order_item_id", "order_id", "artwork_id", "quantity", "price"]
      },
      "Payment": {
        "type": "object",
        "properties": {
          "payment_id": { "type": "integer" },
          "order_id": { "type": "integer" },
          "amount": { "type": "number", "format": "float" },
          "status": { "type": "string", "enum": ["pending", "completed", "failed"] },
          "payment_method": { "type": "string", "enum": ["paypal", "orange_money", "myzaka"] },
          "payment_url": { "type": "string", "nullable": true },
          "payment_ref": { "type": "string", "nullable": true }
        },
        "required": ["payment_id", "order_id", "amount", "status", "payment_method"]
      },
      "Review": {
        "type": "object",
        "properties": {
          "review_id": { "type": "integer" },
          "artwork_id": { "type": "integer" },
          "user_id": { "type": "string", "format": "uuid" },
          "rating": { "type": "integer", "minimum": 1, "maximum": 5 },
          "comment": { "type": "string", "nullable": true }
        },
        "required": ["review_id", "artwork_id", "user_id", "rating"]
      },
      "Message": {
        "type": "object",
        "properties": {
          "message_id": { "type": "integer" },
          "sender_id": { "type": "string", "format": "uuid" },
          "receiver_id": { "type": "string", "format": "uuid" },
          "content": { "type": "string" }
        },
        "required": ["message_id", "sender_id", "receiver_id", "content"]
      },
      "PreRegisterRequest": {
        "type": "object",
        "properties": {
          "recaptchaToken": { "type": "string" },
          "email": { "type": "string", "format": "email" },
          "name": { "type": "string" },
          "password": { "type": "string", "format": "password" }
        },
        "required": ["recaptchaToken", "email", "name", "password"]
      },
      "VerifyEmailCodeRequest": {
        "type": "object",
        "properties": {
          "code": { "type": "string" },
          "email": { "type": "string", "format": "email" }
        },
        "required": ["code", "email"]
      },
      "SelectRoleRequest": {
        "type": "object",
        "properties": {
          "role": { "type": "string", "enum": ["buyer", "artist"] }
        },
        "required": ["role"]
      },
      "SearchRequest": {
        "type": "object",
        "properties": {
          "query": { "type": "string" },
          "category_id": { "type": "integer", "nullable": true },
          "artist_id": { "type": "string", "format": "uuid", "nullable": true }
        },
        "required": ["query"]
      },
      "Error": {
        "type": "object",
        "properties": {
          "error": { "type": "string" },
          "details": { "type": "string", "nullable": true }
        },
        "required": ["error"]
      }
    }
  },
  "paths": {
    "/api/pre-register": {
      "post": {
        "summary": "Register a new user",
        "description": "Creates a user in Keycloak and the database, sends a 6-digit email verification code.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/PreRegisterRequest" }
            }
          }
        },
        "responses": {
          "201": {
            "description": "User registered successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": { "message": { "type": "string" } }
                },
                "example": { "message": "User registered, enter the code from your email in the app" }
              }
            }
          },
          "400": {
            "description": "Invalid input or reCAPTCHA failure",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/Error" } } }
          },
          "409": {
            "description": "Email already exists",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/Error" } } }
          },
          "429": {
            "description": "Rate limit exceeded",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/Error" } } }
          },
          "500": {
            "description": "Server error",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/Error" } } }
          }
        }
      }
    },
    "/api/verify-email-code": {
      "post": {
        "summary": "Verify email address",
        "description": "Validates the 6-digit code sent to the user's email, updates status to pending_role_selection.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/VerifyEmailCodeRequest" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Email verified successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": { "message": { "type": "string" } }
                },
                "example": { "message": "Email verified, please select your role" }
              }
            }
          },
          "400": {
            "description": "Invalid or expired code",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/Error" } } }
          },
          "404": {
            "description": "User not found",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/Error" } } }
          },
          "429": {
            "description": "Rate limit exceeded",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/Error" } } }
          },
          "500": {
            "description": "Server error",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/Error" } } }
          }
        }
      }
    },
    "/api/resend-verification-code": {
      "post": {
        "summary": "Resend email verification code",
        "description": "Sends a new 6-digit verification code to an unverified user.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": { "email": { "type": "string", "format": "email" } },
                "required": ["email"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Verification code resent",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": { "message": { "type": "string" } }
                },
                "example": { "message": "New verification code sent" }
              }
            }
          },
          "400": {
            "description": "Invalid email",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/Error" } } }
          },
          "404": {
            "description": "User not found or already verified",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/Error" } } }
          },
          "429": {
            "description": "Rate limit exceeded",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/Error" } } }
          },
          "500": {
            "description": "Server error",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/Error" } } }
          }
        }
      }
    },
    "/api/select-role": {
      "post": {
        "summary": "Select user role",
        "description": "Sets the user's role to either buyer or artist, triggers verification for artist role.",
        "security": [{ "BearerAuth": [] }],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/SelectRoleRequest" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Role selected successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": { "message": { "type": "string" } }
                },
                "example": { "message": "Role set to artist, please submit verification documents" }
              }
            }
          },
          "400": {
            "description": "Invalid role",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/Error" } } }
          },
          "403": {
            "description": "Unauthorized or role already set",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/Error" } } }
          },
          "429": {
            "description": "Rate limit exceeded",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/Error" } } }
          },
          "500": {
            "description": "Server error",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/Error" } } }
          }
        }
      }
    },
    "/api/users/me": {
      "get": {
        "summary": "Get user profile",
        "description": "Fetches the authenticated user's profile, creating it if it doesn't exist.",
        "security": [{ "BearerAuth": [] }],
        "responses": {
          "200": {
            "description": "User profile retrieved",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/User" } } }
          },
          "201": {
            "description": "User profile created",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": { "type": "string" },
                    "user": { "$ref": "#/components/schemas/User" }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/Error" } } }
          },
          "429": {
            "description": "Rate limit exceeded",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/Error" } } }
          },
          "500": {
            "description": "Server error",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/Error" } } }
          }
        }
      },
      "put": {
        "summary": "Update user profile",
        "description": "Updates the authenticated user's name or email.",
        "security": [{ "BearerAuth": [] }],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": { "type": "string" },
                  "email": { "type": "string", "format": "email" }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Profile updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": { "type": "string" },
                    "user": { "$ref": "#/components/schemas/User" }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/Error" } } }
          },
          "404": {
            "description": "User not found",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/Error" } } }
          },
          "429": {
            "description": "Rate limit exceeded",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/Error" } } }
          },
          "500": {
            "description": "Server error",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/Error" } } }
          }
        }
      }
    },
    "/api/upload-artist-docs": {
      "post": {
        "summary": "Submit artist verification documents",
        "description": "Uploads ID and portfolio documents for artist role verification.",
        "security": [{ "BearerAuth": [] }],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "idDocument": { "type": "string", "format": "binary" },
                  "proofOfWork": { "type": "string", "format": "binary" },
                  "selfie": { "type": "string", "format": "binary", "nullable": true }
                },
                "required": ["idDocument", "proofOfWork"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Documents uploaded successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": { "type": "string" },
                    "requestId": { "type": "integer" }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid file types or sizes",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/Error" } } }
          },
          "403": {
            "description": "Unauthorized or not pending verification",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/Error" } } }
          },
          "429": {
            "description": "Rate limit exceeded",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/Error" } } }
          },
          "500": {
            "description": "Server error",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/Error" } } }
          }
        }
      }
    },
    "/api/admin/artist-requests/pending": {
      "get": {
        "summary": "List pending artist verification requests",
        "description": "Fetches all pending artist verification requests for admin review.",
        "security": [{ "BearerAuth": ["realm:admin"] }],
        "responses": {
          "200": {
            "description": "List of pending requests",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/ArtistRequest" }
                }
              }
            }
          },
          "403": {
            "description": "Not an admin",
"content": { "application/json": { "schema": { "$ref": "#/components/schemas/Error" } } }
          },
          "429": {
            "description": "Rate limit exceeded",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/Error" } } }
          },
          "500": {
            "description": "Server error",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/Error" } } }
          }
        }
      }
    },
    "/api/admin/artist-requests/{requestId}/file/{type}": {
      "get": {
        "summary": "Stream artist verification file",
        "description": "Streams the ID, portfolio, or selfie file for an artist request.",
        "security": [{ "BearerAuth": ["realm:admin"] }],
        "parameters": [
          { "name": "requestId", "in": "path", "required": true, "schema": { "type": "integer" } },
          { "name": "type", "in": "path", "required": true, "schema": { "type": "string", "enum": ["id_document", "proof_of_work", "selfie"] } }
        ],
        "responses": {
          "200": {
            "description": "File stream",
            "content": { "application/octet-stream": {} }
          },
          "400": {
            "description": "Invalid file type",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/Error" } } }
          },
          "403": {
            "description": "Not an admin",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/Error" } } }
          },
          "404": {
            "description": "File or request not found",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/Error" } } }
          },
          "429": {
            "description": "Rate limit exceeded",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/Error" } } }
          },
          "500": {
            "description": "Server error",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/Error" } } }
          }
        }
      }
    },
    "/api/admin/artist-requests/{requestId}/review": {
      "post": {
        "summary": "Review artist verification request",
        "description": "Approves or rejects an artist verification request, updating user role if approved.",
        "security": [{ "BearerAuth": ["realm:admin"] }],
        "parameters": [
          { "name": "requestId", "in": "path", "required": true, "schema": { "type": "integer" } }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "status": { "type": "string", "enum": ["approved", "rejected"] },
                  "rejection_reason": { "type": "string", "nullable": true }
                },
                "required": ["status"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Request reviewed successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": { "message": { "type": "string" } }
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/Error" } } }
          },
          "403": {
            "description": "Not an admin",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/Error" } } }
          },
          "404": {
            "description": "Request not found",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/Error" } } }
          },
          "429": {
            "description": "Rate limit exceeded",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/Error" } } }
          },
          "500": {
            "description": "Server error",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/Error" } } }
          }
        }
      }
    },
    "/api/artists": {
      "get": {
        "summary": "List all artists",
        "description": "Fetches all artist profiles.",
        "responses": {
          "200": {
            "description": "List of artists",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/Artist" }
                }
              }
            }
          },
          "429": {
            "description": "Rate limit exceeded",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/Error" } } }
          },
          "500": {
            "description": "Server error",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/Error" } } }
          }
        }
      },
      "post": {
        "summary": "Create artist profile",
        "description": "Creates a new artist profile for the authenticated user.",
        "security": [{ "BearerAuth": ["realm:artist"] }],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "bio": { "type": "string" },
                  "portfolio": { "type": "string" }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Artist profile created",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/Artist" } } }
          },
          "400": {
            "description": "Invalid input",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/Error" } } }
          },
          "403": {
            "description": "Not an artist",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/Error" } } }
          },
          "429": {
            "description": "Rate limit exceeded",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/Error" } } }
          },
          "500": {
            "description": "Server error",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/Error" } } }
          }
        }
      }
    },
    "/api/artists/{id}": {
      "get": {
        "summary": "Get artist profile",
        "description": "Fetches an artist profile by ID.",
        "parameters": [
          { "name": "id", "in": "path", "required": true, "schema": { "type": "string", "format": "uuid" } }
        ],
        "responses": {
          "200": {
            "description": "Artist profile",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/Artist" } } }
          },
          "404": {
            "description": "Artist not found",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/Error" } } }
          },
          "429": {
            "description": "Rate limit exceeded",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/Error" } } }
          },
          "500": {
            "description": "Server error",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/Error" } } }
          }
        }
      },
      "put": {
        "summary": "Update artist profile",
        "description": "Updates the bio or portfolio of the authenticated artist's profile.",
        "security": [{ "BearerAuth": ["realm:artist"] }],
        "parameters": [
          { "name": "id", "in": "path", "required": true, "schema": { "type": "string", "format": "uuid" } }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "bio": { "type": "string" },
                  "portfolio": { "type": "string" }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Artist profile updated",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/Artist" } } }
          },
          "400": {
            "description": "Invalid input",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/Error" } } }
          },
          "403": {
            "description": "Not the artist or unauthorized",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/Error" } } }
          },
          "404": {
            "description": "Artist not found",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/Error" } } }
          },
          "429": {
            "description": "Rate limit exceeded",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/Error" } } }
          },
          "500": {
            "description": "Server error",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/Error" } } }
          }
        }
      }
    },
    "/api/artworks": {
      "get": {
        "summary": "List all artworks",
        "description": "Fetches all artworks with their images.",
        "responses": {
          "200": {
            "description": "List of artworks",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/Artwork" }
                }
              }
            }
          },
          "429": {
            "description": "Rate limit exceeded",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/Error" } } }
          },
          "500": {
            "description": "Server error",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/Error" } } }
          }
        }
      },
      "post": {
        "summary": "Create a new artwork",
        "description": "Creates a new artwork with an initial image, restricted to artists.",
        "security": [{ "BearerAuth": ["realm:artist"] }],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "title": { "type": "string" },
                  "description": { "type": "string" },
                  "price": { "type": "number", "format": "float" },
                  "category_id": { "type": "integer" },
                  "image": { "type": "string", "format": "binary" }
                },
                "required": ["title", "price", "category_id", "image"]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Artwork created",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/Artwork" } } }
          },
          "400": {
            "description": "Invalid input or file",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/Error" } } }
          },
          "403": {
            "description": "Not an artist",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/Error" } } }
          },
          "429": {
            "description": "Rate limit exceeded",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/Error" } } }
          },
          "500": {
            "description": "Server error",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/Error" } } }
          }
        }
      }
    },
    "/api/artworks/{id}": {
      "get": {
        "summary": "Get artwork details",
        "description": "Fetches a single artwork by ID, including images.",
        "parameters": [
          { "name": "id", "in": "path", "required": true, "schema": { "type": "integer" } }
        ],
        "responses": {
          "200": {
            "description": "Artwork details",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/Artwork" } } }
          },
          "404": {
            "description": "Artwork not found",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/Error" } } }
          },
          "429": {
            "description": "Rate limit exceeded",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/Error" } } }
          },
          "500": {
            "description": "Server error",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/Error" } } }
          }
        }
      },
      "put": {
        "summary": "Update artwork",
        "description": "Updates an artwork's details, restricted to the owning artist.",
        "security": [{ "BearerAuth": ["realm:artist"] }],
        "parameters": [
          { "name": "id", "in": "path", "required": true, "schema": { "type": "integer" } }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "title": { "type": "string" },
                  "description": { "type": "string" },
                  "price": { "type": "number", "format": "float" },
                  "category_id": { "type": "integer" }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Artwork updated",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/Artwork" } } }
          },
          "400": {
            "description": "Invalid input",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/Error" } } }
          },
          "403": {
            "description": "Not the artist or unauthorized",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/Error" } } }
          },
          "404": {
            "description": "Artwork not found",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/Error" } } }
          },
          "429": {
            "description": "Rate limit exceeded",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/Error" } } }
          },
          "500": {
            "description": "Server error",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/Error" } } }
          }
        }
      },
      "delete": {
        "summary": "Delete artwork",
        "description": "Deletes an artwork, restricted to the owning artist or admin.",
        "security": [{ "BearerAuth": ["realm:artist", "realm:admin"] }],
        "parameters": [
          { "name": "id", "in": "path", "required": true, "schema": { "type": "integer" } }
        ],
        "responses": {
          "204": {
            "description": "Artwork deleted successfully"
          },
          "403": {
            "description": "Not the artist or admin",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/Error" } } }
          },
          "404": {
            "description": "Artwork not found",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/Error" } } }
          },
          "429": {
            "description": "Rate limit exceeded",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/Error" } } }
          },
          "500": {
            "description": "Server error",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/Error" } } }
          }
        }
      }
    },
    "/api/artworks/{id}/images": {
      "post": {
        "summary": "Add images to artwork",
        "description": "Uploads additional images to an existing artwork, up to 5 total, restricted to the owning artist.",
        "security": [{ "BearerAuth": ["realm:artist"] }],
        "parameters": [
          { "name": "id", "in": "path", "required": true, "schema": { "type": "integer" } }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "images": { "type": "array", "items": { "type": "string", "format": "binary" } }
                },
                "required": ["images"]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Images added successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": { "type": "string" },
                    "images": { "type": "array", "items": { "type": "string" } }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid files or image limit exceeded",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/Error" } } }
          },
          "403": {
            "description": "Not the artist",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/Error" } } }
          },
          "404": {
            "description": "Artwork not found",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/Error" } } }
          },
          "429": {
            "description": "Rate limit exceeded",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/Error" } } }
          },
          "500": {
            "description": "Server error",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/Error" } } }
          }
        }
      }
    },
    "/api/categories": {
      "get": {
        "summary": "List all categories",
        "description": "Fetches all artwork categories.",
        "responses": {
          "200": {
            "description": "List of categories",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/Category" }
                }
              }
            }
          },
          "429": {
            "description": "Rate limit exceeded",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/Error" } } }
          },
          "500": {
            "description": "Server error",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/Error" } } }
          }
        }
      },
      "post": {
        "summary": "Create a new category",
        "description": "Creates a new artwork category, restricted to admins.",
        "security": [{ "BearerAuth": ["realm:admin"] }],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": { "type": "string" },
                  "description": { "type": "string" }
                },
                "required": ["name"]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Category created",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/Category" } } }
          },
          "400": {
            "description": "Invalid input",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/Error" } } }
          },
          "403": {
            "description": "Not an admin",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/Error" } } }
          },
          "429": {
            "description": "Rate limit exceeded",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/Error" } } }
          },
          "500": {
            "description": "Server error",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/Error" } } }
          }
        }
      }
    },
    "/api/categories/{id}": {
      "put": {
        "summary": "Update a category",
        "description": "Updates an existing category, restricted to admins.",
        "security": [{ "BearerAuth": ["realm:admin"] }],
        "parameters": [
          { "name": "id", "in": "path", "required": true, "schema": { "type": "integer" } }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": { "type": "string" },
                  "description": { "type": "string" }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Category updated",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/Category" } } }
          },
          "400": {
            "description": "Invalid input",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/Error" } } }
          },
          "403": {
            "description": "Not an admin",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/Error" } } }
          },
          "404": {
            "description": "Category not found",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/Error" } } }
          },
          "429": {
            "description": "Rate limit exceeded",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/Error" } } }
          },
          "500": {
            "description": "Server error",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/Error" } } }
          }
        }
      }
    },
    "/api/orders": {
      "get": {
        "summary": "List user orders",
        "description": "Fetches all orders for the authenticated user (buyer or artist).",
        "security": [{ "BearerAuth": [] }],
        "responses": {
          "200": {
            "description": "List of orders",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/Order" }
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/Error" } } }
          },
          "429": {
            "description": "Rate limit exceeded",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/Error" } } }
          },
          "500": {
            "description": "Server error",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/Error" } } }
          }
        }
      },
      "post": {
        "summary": "Place a new order",
        "description": "Creates a new order for an artwork, restricted to verified buyers.",
        "security": [{ "BearerAuth": ["realm:buyer"] }],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "artwork_id": { "type": "integer" },
                  "total_amount": { "type": "number", "format": "float" }
                },
                "required": ["artwork_id", "total_amount"]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Order created",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/Order" } } }
          },
          "400": {
            "description": "Invalid input or artwork",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/Error" } } }
          },
          "403": {
            "description": "Not a verified buyer",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/Error" } } }
          },
          "429": {
            "description": "Rate limit exceeded",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/Error" } } }
          },
          "500": {
            "description": "Server error",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/Error" } } }
          }
        }
      }
    },
    "/api/orders/{id}": {
      "get": {
        "summary": "Get order details",
        "description": "Fetches details of a specific order for the authenticated user.",
        "security": [{ "BearerAuth": [] }],
        "parameters": [
          { "name": "id", "in": "path", "required": true, "schema": { "type": "integer" } }
        ],
        "responses": {
          "200": {
            "description": "Order details",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/Order" } } }
          },
          "403": {
            "description": "Unauthorized",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/Error" } } }
          },
          "404": {
            "description": "Order not found",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/Error" } } }
          },
          "429": {
            "description": "Rate limit exceeded",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/Error" } } }
          },
          "500": {
            "description": "Server error",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/Error" } } }
          }
        }
      }
    },
    "/api/orders/{id}/status": {
      "put": {
        "summary": "Update order status",
        "description": "Updates the status of an order, restricted to admins.",
        "security": [{ "BearerAuth": ["realm:admin"] }],
        "parameters": [
          { "name": "id", "in": "path", "required": true, "schema": { "type": "integer" } }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "status": { "type": "string", "enum": ["pending", "completed", "canceled"] }
                },
                "required": ["status"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Order status updated",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/Order" } } }
          },
          "400": {
            "description": "Invalid status",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/Error" } } }
          },
          "403": {
            "description": "Not an admin",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/Error" } } }
          },
          "404": {
            "description": "Order not found",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/Error" } } }
          },
          "429": {
            "description": "Rate limit exceeded",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/Error" } } }
          },
          "500": {
            "description": "Server error",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/Error" } } }
          }
        }
      }
    },
    "/api/payments": {
      "post": {
        "summary": "Initiate a payment",
        "description": "Initiates a payment for an order, supporting PayPal, Orange Money, or MyZaka.",
        "security": [{ "BearerAuth": [] }],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "order_id": { "type": "integer" },
                  "amount": { "type": "number", "format": "float" },
                  "payment_method": { "type": "string", "enum": ["paypal", "orange_money", "myzaka"] }
                },
                "required": ["order_id", "amount", "payment_method"]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Payment initiated",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/Payment" } } }
          },
          "400": {
            "description": "Invalid input or order",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/Error" } } }
          },
          "403": {
            "description": "Unauthorized",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/Error" } } }
          },
          "429": {
            "description": "Rate limit exceeded",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/Error" } } }
          },
          "500": {
            "description": "Server error",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/Error" } } }
          }
        }
      }
    },
    "/api/payments/{order_id}": {
      "get": {
        "summary": "Get payment status",
        "description": "Fetches the payment status for a specific order.",
        "security": [{ "BearerAuth": [] }],
        "parameters": [
          { "name": "order_id", "in": "path", "required": true, "schema": { "type": "integer" } }
        ],
        "responses": {
          "200": {
            "description": "Payment details",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/Payment" } } }
          },
          "403": {
            "description": "Unauthorized",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/Error" } } }
          },
          "404": {
            "description": "Payment or order not found",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/Error" } } }
          },
          "429": {
            "description": "Rate limit exceeded",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/Error" } } }
          },
          "500": {
            "description": "Server error",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/Error" } } }
          }
        }
      }
    },
    "/api/payments/{id}/status": {
      "put": {
        "summary": "Update payment status",
        "description": "Updates the status of a payment, restricted to admins.",
        "security": [{ "BearerAuth": ["realm:admin"] }],
        "parameters": [
          { "name": "id", "in": "path", "required": true, "schema": { "type": "integer" } }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "status": { "type": "string", "enum": ["pending", "completed", "failed"] }
                },
                "required": ["status"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Payment status updated",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/Payment" } } }
          },
          "400": {
            "description": "Invalid status",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/Error" } } }
          },
          "403": {
            "description": "Not an admin",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/Error" } } }
          },
          "404": {
            "description": "Payment not found",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/Error" } } }
          },
          "429": {
            "description": "Rate limit exceeded",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/Error" } } }
          },
          "500": {
            "description": "Server error",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/Error" } } }
          }
        }
      }
    },
    "/api/payments/confirm": {
      "post": {
        "summary": "Confirm USSD payment",
        "description": "Confirms a USSD-based payment (Orange Money or MyZaka) for an order.",
        "security": [{ "BearerAuth": [] }],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "payment_id": { "type": "integer" },
                  "confirmation_code": { "type": "string" }
                },
                "required": ["payment_id", "confirmation_code"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Payment confirmed",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": { "message": { "type": "string" } }
                }
              }
            }
          },
          "400": {
            "description": "Invalid confirmation code",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/Error" } } }
          },
          "403": {
            "description": "Unauthorized",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/Error" } } }
          },
          "404": {
            "description": "Payment not found",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/Error" } } }
          },
          "429": {
            "description": "Rate limit exceeded",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/Error" } } }
          },
          "500": {
            "description": "Server error",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/Error" } } }
          }
        }
      }
    },
    "/payment-callback": {
      "post": {
        "summary": "PayPal payment callback",
        "description": "Webhook endpoint for PayPal to confirm payment status.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "order_id": { "type": "integer" },
                  "status": { "type": "string" }
                },
                "required": ["order_id", "status"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Callback processed",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": { "message": { "type": "string" } }
                }
              }
            }
          },
          "400": {
            "description": "Invalid callback data",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/Error" } } }
          },
          "429": {
            "description": "Rate limit exceeded",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/Error" } } }
          },
          "500": {
            "description": "Server error",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/Error" } } }
          }
        }
      }
    },
    "/api/reviews": {
      "post": {
        "summary": "Submit a review",
        "description": "Submits a review for an artwork, restricted to buyers who purchased it.",
        "security": [{ "BearerAuth": ["realm:buyer"] }],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "artwork_id": { "type": "integer" },
                  "rating": { "type": "integer", "minimum": 1, "maximum": 5 },
                  "comment": { "type": "string", "nullable": true }
                },
                "required": ["artwork_id", "rating"]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Review submitted",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/Review" } } }
          },
          "400": {
            "description": "Invalid input",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/Error" } } }
          },
          "403": {
            "description": "Not a buyer or no purchase",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/Error" } } }
          },
          "404": {
            "description": "Artwork not found",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/Error" } } }
          },
          "429": {
            "description": "Rate limit exceeded",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/Error" } } }
          },
          "500": {
            "description": "Server error",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/Error" } } }
          }
        }
      }
    },
    "/api/reviews/{artwork_id}": {
      "get": {
        "summary": "List reviews for an artwork",
        "description": "Fetches all reviews for a specific artwork.",
        "parameters": [
          { "name": "artwork_id", "in": "path", "required": true, "schema": { "type": "integer" } }
        ],
        "responses": {
          "200": {
            "description": "List of reviews",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/Review" }
                }
              }
            }
          },
          "404": {
            "description": "Artwork not found",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/Error" } } }
          },
          "429": {
            "description": "Rate limit exceeded",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/Error" } } }
          },
          "500": {
            "description": "Server error",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/Error" } } }
          }
        }
      }
    },
    "/api/messages": {
      "post": {
        "summary": "Send a message",
        "description": "Sends a message to another user, restricted to authenticated users.",
        "security": [{ "BearerAuth": [] }],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "receiver_id": { "type": "string", "format": "uuid" },
                  "content": { "type": "string" }
                },
                "required": ["receiver_id", "content"]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Message sent",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/Message" } } }
          },
          "400": {
            "description": "Invalid input",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/Error" } } }
          },
          "403": {
            "description": "Unauthorized",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/Error" } } }
          },
          "404": {
            "description": "Receiver not found",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/Error" } } }
          },
          "429": {
            "description": "Rate limit exceeded",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/Error" } } }
          },
          "500": {
            "description": "Server error",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/Error" } } }
          }
        }
      }
    },
    "/api/search": {
      "post": {
        "summary": "Search artworks",
        "description": "Searches artworks by title, artist, or category.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/SearchRequest" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Search results",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/Artwork" }
                }
              }
            }
          },
          "400": {
            "description": "Invalid search query",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/Error" } } }
          },
          "429": {
            "description": "Rate limit exceeded",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/Error" } } }
          },
          "500": {
            "description": "Server error",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/Error" } } }
          }
        }
      }
    }
  }
}