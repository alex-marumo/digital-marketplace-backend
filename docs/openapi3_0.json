{
  "openapi": "3.0.0",
  "info": {
    "title": "Digital Marketplace API",
    "version": "1.1.0",
    "description": "API for managing users, authentication, artists, artworks, orders, payments, reviews, and messages. Uses Keycloak for authentication and includes email verification, CAPTCHA protection, and role-based access control."
  },
  "servers": [
    {
      "url": "http://localhost:3000",
      "description": "Local development server"
    }
  ],
  "components": {
    "securitySchemes": {
      "BearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT",
        "description": "JWT token from Keycloak. Roles: `buyer`, `artist`, `admin`."
      }
    },
    "schemas": {
      "User": {
        "type": "object",
        "properties": {
          "user_id": { "type": "integer", "description": "Auto-incremented user ID" },
          "keycloak_id": { "type": "string", "format": "uuid", "description": "Keycloak UUID" },
          "name": { "type": "string", "description": "User's full name" },
          "email": { "type": "string", "description": "User's email" },
          "role": { "type": "string", "enum": ["buyer", "artist", "admin"], "description": "User's role" },
          "trust_level": { "type": "string", "enum": ["unverified", "verified"], "description": "User trust level" }
        },
        "required": ["user_id", "keycloak_id", "name", "email", "role"]
      },
      "Artwork": {
        "type": "object",
        "properties": {
          "artwork_id": { "type": "integer" },
          "title": { "type": "string" },
          "description": { "type": "string" },
          "price": { "type": "number" },
          "category_id": { "type": "integer" },
          "artist_id": { "type": "integer" },
          "images": { "type": "array", "items": { "type": "string" } }
        }
      }
    }
  },
  "security": [{ "BearerAuth": [] }],
  "paths": {
    "/api/pre-register": {
      "post": {
        "summary": "Pre-register a new user",
        "description": "Pre-registration for a new user. Requires CAPTCHA validation to prevent spam.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": { "type": "string" },
                  "captcha_token": { "type": "string" }
                },
                "required": ["email", "captcha_token"]
              }
            }
          }
        },
        "responses": {
          "200": { "description": "Verification email sent." },
          "400": { "description": "Invalid email or CAPTCHA failed." },
          "409": { "description": "Email already in use." }
        }
      }
    },
    "/api/verify-email": {
      "get": {
        "summary": "Verify email",
        "description": "Verifies email through a unique token and updates the user's trust level.",
        "parameters": [
          { "name": "token", "in": "query", "required": true, "schema": { "type": "string" } }
        ],
        "responses": {
          "200": { "description": "Email successfully verified." },
          "400": { "description": "Invalid or expired token." }
        }
      }
    },
    "/api/users/me": {
      "get": {
        "summary": "Fetch current user's profile",
        "description": "Returns the authenticated user's details. Creates a new user if none exists.",
        "security": [{ "BearerAuth": [] }],
        "responses": {
          "200": {
            "description": "User profile",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/User" } } }
          },
          "401": { "description": "Unauthorized (no token)" }
        }
      }
    },
    "/api/artworks": {
      "get": {
        "summary": "Get all artworks",
        "tags": ["Artworks"],
        "responses": {
          "200": {
            "description": "List of artworks.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/Artwork" }
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Add new artwork",
        "tags": ["Artworks"],
        "security": [{ "BearerAuth": [] }],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "title": { "type": "string" },
                  "description": { "type": "string" },
                  "price": { "type": "number" },
                  "category_id": { "type": "integer" },
                  "image": { "type": "string", "format": "binary" }
                }
              }
            }
          }
        },
        "responses": { "201": { "description": "Artwork added successfully." }, "403": { "description": "Unauthorized." } }
      }
    },
    "/api/orders": {
      "post": {
        "summary": "Place an order",
        "tags": ["Orders"],
        "security": [{ "BearerAuth": [] }],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "artwork_id": { "type": "integer" },
                  "total_amount": { "type": "number" }
                }
              }
            }
          }
        },
        "responses": { "201": { "description": "Order created successfully." }, "403": { "description": "Unauthorized." } }
      }
    },
    "/api/payments": {
      "post": {
        "summary": "Create a payment record",
        "tags": ["Payments"],
        "security": [{ "BearerAuth": [] }],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "order_id": { "type": "integer" },
                  "amount": { "type": "number" }
                }
              }
            }
          }
        },
        "responses": { "201": { "description": "Payment recorded." }, "403": { "description": "Unauthorized." } }
      }
    }
  }
}
